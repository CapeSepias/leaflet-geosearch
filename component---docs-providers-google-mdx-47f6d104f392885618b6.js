(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{wXKD:function(e,o,t){"use strict";t.r(o),t.d(o,"_frontmatter",(function(){return l})),t.d(o,"default",(function(){return c}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var n=t("/FXl"),r=t("TjRS"),a=t("KUxS"),p=t("yYOO");t("aD51");function i(){return(i=Object.assign||function(e){for(var o=1;o<arguments.length;o++){var t=arguments[o];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}var l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/providers/google.mdx"}});var s={_frontmatter:l},d=r.a;function c(e){var o,t=e.components,c=function(e,o){if(null==e)return{};var t,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],o.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(n.b)(d,i({},s,c,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"google-provider"},"Google Provider"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"note"),": Google services require an API key. ",Object(n.b)("a",i({parentName:"p"},{href:"https://developers.google.com/maps/documentation/javascript/get-api-key"}),"Obtain here"),".\nFor more options and configurations, see the ",Object(n.b)("a",i({parentName:"p"},{href:"https://developers.google.com/maps/documentation/geocoding/start"}),"Google Maps developer docs"),"."),Object(n.b)(a.a,{__position:0,__code:'<Map provider="Google" />',__scope:(o={props:c,DefaultLayout:r.a,Playground:a.a,Map:p.a},o.DefaultLayout=r.a,o._frontmatter=l,o),mdxType:"Playground"},Object(n.b)(p.a,{provider:"Google",mdxType:"Map"})),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-js"}),"import { GoogleProvider } from 'leaflet-geosearch';\n\nconst provider = new GoogleProvider({\n  params: {\n    key: '__YOUR_GOOGLE_KEY__'\n  },\n});\n\n// add to leaflet\nimport { GeoSearchControl } from 'leaflet-geosearch';\n\nmap.addControl(new GeoSearchControl({\n  provider,\n}));\n")),Object(n.b)("h2",{id:"additional-options"},"Additional options"),Object(n.b)("p",null,"Google supports a number of ",Object(n.b)("a",i({parentName:"p"},{href:"https://developers.google.com/maps/documentation/geocoding/intro#geocoding"}),"optional parameters"),". As Google requires those parameters to be added to the url, they can be added to the ",Object(n.b)("inlineCode",{parentName:"p"},"params")," key of the provider."),Object(n.b)("p",null,"All options defined next to the ",Object(n.b)("inlineCode",{parentName:"p"},"params")," key, would have been added to the request body."),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-js"}),"const provider = new GoogleProvider({\n  params: {\n    key: '__YOUR_GOOGLE_KEY__',\n    language: 'nl', // render results in Dutch\n    region: 'nl',   // prioritize matches within The Netherlands\n  },\n});\n")))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/providers/google.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-providers-google-mdx-47f6d104f392885618b6.js.map
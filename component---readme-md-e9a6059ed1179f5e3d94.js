(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{FXGt:function(e,t,n){e.exports=n.p+"static/geosearch-6f44079749dc12293f1a9dba7f606d33.gif"},nbT8:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return p}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("/FXl"),r=n("TjRS");n("aD51");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"readme.md"}});var i={_frontmatter:l},s=r.a;function p(e){var t=e.components,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(s,o({},i,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"leafletgeosearch"},"Leaflet.GeoSearch"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Demo and Docs: ",Object(a.b)("a",o({parentName:"strong"},{href:"https://smeijer.github.io/leaflet-geosearch"}),"smeijer.github.io/leaflet-geosearch"))),Object(a.b)("p",null,Object(a.b)("img",{alt:"animation of geosearch",src:n("FXGt")})),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"more docs @")," ",Object(a.b)("a",o({parentName:"p"},{href:"https://smeijer.github.io/leaflet-geosearch/#installation"}),"https://smeijer.github.io/leaflet-geosearch/#installation")),Object(a.b)("p",null,"with npm:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-bash"}),"npm install --save leaflet-geosearch\n")),Object(a.b)("p",null,"or yarn:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-bash"}),"yarn add leaflet-geosearch\n")),Object(a.b)("h2",{id:"browser-support--polyfills"},"Browser support / Polyfills"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"more docs @")," ",Object(a.b)("a",o({parentName:"p"},{href:"https://smeijer.github.io/leaflet-geosearch/#browser-support--polyfills"}),"https://smeijer.github.io/leaflet-geosearch/#browser-support--polyfills")),Object(a.b)("p",null,"This library is written with the latest technologies in mind. Thereby it is required to include some polyfills when you wish to support older browsers. These polyfills are recommended for IE and Safari support:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://npmjs.com/babel-polyfill"}),"babel-polyfill"),", for ",Object(a.b)("inlineCode",{parentName:"li"},"array.includes")," support."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://npmjs.com/unfetch"}),"unfetch"),", for ",Object(a.b)("inlineCode",{parentName:"li"},"fetch")," requests.")),Object(a.b)("h1",{id:"about"},"About"),Object(a.b)("p",null,"This library adds support for geocoding ",Object(a.b)("em",{parentName:"p"},"(address lookup, a.k.a. geoseaching)"),"\nto your (web) application. It comes with controls to be embedded in your ",Object(a.b)("a",o({parentName:"p"},{href:"http://leafletjs.com"}),"Leaflet")," map."),Object(a.b)("p",null,"Check out the ",Object(a.b)("a",o({parentName:"p"},{href:"https://smeijer.github.io/leaflet-geosearch"}),"docs")," for various possibilities."),Object(a.b)("p",null,'The library uses so-called "providers" to take care of building the correct\nservice URL and parsing the retrieved data into a uniform format. Thanks to this\narchitecture, it is pretty easy to add your own providers, so you can use\nyour own geocoding service(s).'),Object(a.b)("p",null,"The control comes with a number of default providers:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://smeijer.github.io/leaflet-geosearch/providers/algolia"}),"Algolia")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://smeijer.github.io/leaflet-geosearch/providers/bing"}),"Bing")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://smeijer.github.io/leaflet-geosearch/providers/esri"}),"Esri")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://smeijer.github.io/leaflet-geosearch/providers/google"}),"Google")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://smeijer.github.io/leaflet-geosearch/providers/locationiq"}),"LocationIQ")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://smeijer.github.io/leaflet-geosearch/providers/opencage"}),"OpenCage")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://smeijer.github.io/leaflet-geosearch/providers/openstreetmap"}),"OpenStreetMap"))),Object(a.b)("p",null,"Although this project is still named ",Object(a.b)("inlineCode",{parentName:"p"},"leaflet-geosearch"),", this library is also\nusable without LeafletJS, and does not have any dependencies whatsoever."),Object(a.b)("h1",{id:"usage"},"Usage"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"more docs @")," ",Object(a.b)("a",o({parentName:"p"},{href:"https://smeijer.github.io/leaflet-geosearch/usage"}),"https://smeijer.github.io/leaflet-geosearch/usage")),Object(a.b)("p",null,"Let's first start with an little example on how to use this control without\nleaflet. For example as an address lookup on a webshop order form. Perhaps to\nsearch for the closest alternative package delivery point? Or to link it to your\nown custom map component."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"// import\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\n\n// setup\nconst provider = new OpenStreetMapProvider();\n\n// search\nconst results = await provider.search({ query: input.value });\n")),Object(a.b)("p",null,"Of course, something like this should be bound to something like a form or\ninput:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"import { OpenStreetMapProvider } from 'leaflet-geosearch';\n\nconst form = document.querySelector('form');\nconst input = form.querySelector('input[type=\"text\"]');\n\nform.addEventListener('submit', async (event) => {\n  event.preventDefault();\n\n  const results = await provider.search({ query: input.value });\n  console.log(results); // Â» [{}, {}, {}, ...]\n});\n")),Object(a.b)("p",null,"Instead of es6 ",Object(a.b)("inlineCode",{parentName:"p"},"async")," / ",Object(a.b)("inlineCode",{parentName:"p"},"await")," you can also use promises like:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"provider.search({ query: '...' }).then(function (result) {\n  // do something with result;\n});\n")),Object(a.b)("h2",{id:"results"},"Results"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"search")," event of all providers return an array of ",Object(a.b)("inlineCode",{parentName:"p"},"result objects"),". The\nbase structure is uniform between the providers. It provides a object like:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"const result = {\n  x: Number, // lon,\n  y: Number, // lat,\n  label: String, // formatted address\n  bounds: [\n    [Number, Number], // s, w - lat, lon\n    [Number, Number], // n, e - lat, lon\n  ],\n  raw: {}, // raw provider result\n};\n")),Object(a.b)("p",null,"The contents of the ",Object(a.b)("inlineCode",{parentName:"p"},"raw")," property differ per provider. This is the unprocessed\nresult from the 3th party service. This property is included for developer\nconvenience. ",Object(a.b)("inlineCode",{parentName:"p"},"leaflet-geosearch")," does not use it. If you need to know the\ncontents of this property, you should check the 3th party developer docs. (or\nuse your debugger)"),Object(a.b)("h1",{id:"providers"},"Providers"),Object(a.b)("p",null,"When ",Object(a.b)("inlineCode",{parentName:"p"},"OpenStreetMap")," does not match your needs; you can also choose to use the\n",Object(a.b)("inlineCode",{parentName:"p"},"Algolia"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Bing"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Esri"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Google")," ",Object(a.b)("inlineCode",{parentName:"p"},"LocationIQ"),", or ",Object(a.b)("inlineCode",{parentName:"p"},"OpenCage")," providers. Most of those providers do however require API\nkeys. See the documentation pages on the relevant organisations on how to obtain\nthese keys."),Object(a.b)("p",null,"In case you decide to write your own provider, please consider submitting a PR\nto share your work with us."),Object(a.b)("p",null,"Providers are unaware of any options you can give them. They are simple proxies\nto their endpoints. There is only one ",Object(a.b)("inlineCode",{parentName:"p"},"special property"),", and that is the ",Object(a.b)("inlineCode",{parentName:"p"},"params"),"\noption. The difference being; that ",Object(a.b)("inlineCode",{parentName:"p"},"params")," will be included in the endpoint url.\nOften being used for ",Object(a.b)("inlineCode",{parentName:"p"},"API KEYS"),", where as the other attributes can be used for\nprovider configuration."),Object(a.b)("h1",{id:"using-with-leafletjs"},"Using with LeafletJS"),Object(a.b)("p",null,"This project comes with a leaflet control to hook the search providers into\nleaflet. The example below uses the ",Object(a.b)("inlineCode",{parentName:"p"},"OpenStreetMap Provider"),", but you can exchange\nthis with on of the other included providers as well as your own custom made\nproviders. Remember to setup the provider with a ",Object(a.b)("inlineCode",{parentName:"p"},"key")," when required (Google and\nBing for example)."),Object(a.b)("p",null,Object(a.b)("img",{alt:"search control",src:n("rvSX")})),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"import L from 'leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\n\nconst provider = new OpenStreetMapProvider();\n\nconst searchControl = new GeoSearchControl({\n  provider: provider,\n});\n\nconst map = new L.Map('map');\nmap.addControl(searchControl);\n")),Object(a.b)("h2",{id:"geosearchcontrol"},"GeoSearchControl"),Object(a.b)("p",null,"There are some configurable options like setting the position of the search input\nand whether or not a marker should be displayed at the position of the search result."),Object(a.b)("p",null,Object(a.b)("img",{alt:"search button",src:n("qVSK")}),"\nThere are two visual styles of this control. One is the more 'leaflet-way' by\nputting the search control under a button (see image above). And one where the\nsearch control is permanently shown as a search bar (see image under\n",Object(a.b)("a",o({parentName:"p"},{href:"#using-with-leafletjs"}),"using with LeafletJS"),")."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Render style")),Object(a.b)("p",null,"This render style can be set by the optional ",Object(a.b)("inlineCode",{parentName:"p"},"style")," option."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"new GeoSearchControl({\n  provider: myProvider, // required\n  style: 'bar', // optional: bar|button  - default button\n}).addTo(map);\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"AutoComplete")),Object(a.b)("p",null,"Auto complete can be configured by the parameters ",Object(a.b)("inlineCode",{parentName:"p"},"autoComplete")," and\n",Object(a.b)("inlineCode",{parentName:"p"},"autoCompleteDelay"),". A little delay is required to not DDOS the server on every\nkeystroke."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"new GeoSearchControl({\n  provider: myProvider, // required\n  autoComplete: true, // optional: true|false  - default true\n  autoCompleteDelay: 250, // optional: number      - default 250\n}).addTo(map);\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Show result")),Object(a.b)("p",null,"There are a number of options to adjust the way results are visualized."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"new GeoSearchControl({\n  provider: myProvider, // required\n  showMarker: true, // optional: true|false  - default true\n  showPopup: false, // optional: true|false  - default false\n  marker: {\n    // optional: L.Marker    - default L.Icon.Default\n    icon: new L.Icon.Default(),\n    draggable: false,\n  },\n  popupFormat: ({ query, result }) => result.label, // optional: function    - default returns result label\n  maxMarkers: 1, // optional: number      - default 1\n  retainZoomLevel: false, // optional: true|false  - default false\n  animateZoom: true, // optional: true|false  - default true\n  autoClose: false, // optional: true|false  - default false\n  searchLabel: 'Enter address', // optional: string      - default 'Enter address'\n  keepResult: false, // optional: true|false  - default false\n});\n")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"showMarker")," and ",Object(a.b)("inlineCode",{parentName:"p"},"showPopup")," determine whether or not to show a marker and/or\nopen a popup with the location text."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"marker")," can be set to any instance of a (custom) ",Object(a.b)("inlineCode",{parentName:"p"},"L.Icon"),"."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"popupFormat")," is callback function for displaying text on popup."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"maxMarker")," determines how many last results are kept in memory. Default 1, but\nperhaps you want to show the last ",Object(a.b)("inlineCode",{parentName:"p"},"x")," results when searching for new queries as\nwell."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"retainZoomLevel")," is a setting that fixes the zoomlevel. Default behaviour is to\nzoom and pan to the search result. With ",Object(a.b)("inlineCode",{parentName:"p"},"retainZoomLevel")," on ",Object(a.b)("inlineCode",{parentName:"p"},"true"),", the map is\nonly panned."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"animateZoom")," controls whether or not the pan/zoom moment is being animated."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"autoClose")," closes the result list if a result is selected by click/enter."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"keepResult")," is used to keep the selected result in the search field. This prevents markers to disappear while using the ",Object(a.b)("inlineCode",{parentName:"p"},"autoClose")," feature."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Events")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"geosearch/showlocation")," is fired when location is chosen from the result list."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"map.on('geosearch/showlocation', yourEventHandler);\n")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"geosearch/marker/dragend")," is fired when marker has been dragged."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"map.on('geosearch/marker/dragend', yourEventHandler);\n")),Object(a.b)("h1",{id:"development"},"Development"),Object(a.b)("p",null,"Checkout the providers to see how easy it is to write your own. For research it\ncan be interesting to see the difference between Bing and the others; because\nBing does not support ",Object(a.b)("inlineCode",{parentName:"p"},"CORS"),", and requires ",Object(a.b)("inlineCode",{parentName:"p"},"jsonp")," to be used instead."),Object(a.b)("p",null,"In case you decide to write your own provider, please consider submitting a PR\nto share your work with us."))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"readme.md"}}),p.isMDXComponent=!0},qVSK:function(e,t,n){e.exports=n.p+"static/searchbutton-07837b529b6bc503090fb01831270050.png"},rvSX:function(e,t,n){e.exports=n.p+"static/searchbar-bbd5505d90041e2f17b3f4cda29db2e9.png"}}]);
//# sourceMappingURL=component---readme-md-e9a6059ed1179f5e3d94.js.map